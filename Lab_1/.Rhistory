library(forecast)
library(DIMORA)
library(fpp2)
##some plots for time series##################
plot(a10, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
seasonplot(a10, ylab="million dollars", xlab="Year", main="Seasonal plot: Antidiabetic drugs", year.labels=T, year.labels.left=T, col=1:20, pch=19)
###read the data
facebook<- read_excel("facebook.xlsx")
str(facebook)
##create a variable 'time'
tt<- 1:NROW(facebook)
#create the variable 'fb'
fb <- facebook$fb
##make a plot
plot(tt, fb, xlab="Time", ylab="Facebook users")
acf(fb)
##fit a linear regression model
fit1 <- lm(fb ~ tt)
summary(fit1)
##plot of the model
plot(tt, fb, xlab="Time", ylab="Facebook users")
abline(fit1, col=3)
##check the residuals? are they autocorrelated? Test of DW
dwtest(fit1)
str(fit1)
##check the residuals
resfit1<- residuals(fit1)
plot(resfit1,xlab="Time", ylab="residuals" )
##let us do the same with a linear model for time series, so we transform the data into a 'ts' object
fb.ts <- ts(fb, frequency = 4)       # transform fb into a time series object
fb.ts
trend
## we fit a linear model with the tslm function
fitts<- tslm(fb.ts~trend)
###obviously it gives the same results of the first model
summary(fitts)
dwtest(fitts)
## we fit a linear model with the tslm function
fitts<- tslm(fb.ts~alpha)
## we fit a linear model with the tslm function
fitts<- tslm(fb.ts ~ t)
## we fit a linear model with the tslm function
fitts<- tslm(fb.ts ~ trend)
## we fit a linear model with the tslm function
fitts <- tslm(fb.ts ~ trend)
###obviously it gives the same results of the first model
summary(fitts)
dwtest(fitts)
apple<- read_excel("apple.xlsx")
str(apple)
imac <- apple$iMac
#data visualization
plot(imac,type="l", xlab="quarter", ylab="iMac sales")
#variable tt for a linear model
tt <- 1:NROW(apple)
# linear model
fit2 <- lm(imac~tt)
summary(fit2)
# linear model
fit2 <- lm(imac ~ tt)
summary(fit2)
plot(imac,type="l", xlab="quarter", ylab="iMac sales")
abline(fit2, col=3)
dwtest(fit2)
###check the residuals
res2<- residuals(fit2)
plot(res2, xlab="quarter", ylab="residuals", type="l")
acf(res2)
#data transformed as time series
mac.ts<-ts(imac, frequency=4)
#Model with trend and seasonality
fit3 <- tslm(mac.ts ~ trend+season)
summary(fit3)
#check the residuals
res3 <- residuals(fit3)
plot(res3, ylab="residuals")
dwtest(fit3)
###plot of the model
plot(mac.ts, ylab="iMac sales", xlab="Time")
lines(fitted(fit3), col=2)
##let us do the same with a linear model for time series, so we transform the data into a 'ts' object
fb.ts <- ts(fb, frequency = 4)       # transform fb into a time series object
ts.plot(fb.ts, type="o")             # ts.plot plot for time series
plot(resfit1,xlab="Time", ylab="residuals" )
##plot of the model
plot(tt, fb, xlab="Time", ylab="Facebook users")
##plot of the model
plot(tt, fb, xlab="Time", ylab="Facebook users")
##create a variable 'time'
tt<- 1:NROW(facebook)
#create the variable 'fb'
fb <- facebook$fb
##make a plot
plot(tt, fb, xlab="Time", ylab="Facebook users")
acf(fb)
##fit a linear regression model
fit1 <- lm(fb ~ tt)
summary(fit1)
##plot of the model
plot(tt, fb, xlab="Time", ylab="Facebook users")
abline(fit1, col=3)
#data visualization
plot(imac,type="l", xlab="quarter", ylab="iMac sales")
##make a plot
plot(tt, fb, xlab="Time", ylab="Facebook users")
###plot of the model
plot(mac.ts, ylab="iMac sales", xlab="Time")
lines(fitted(fit3), col=2)
uschange<- uschange
str(uschange)
plot(uschange)
autoplot(uschange)
pairs(uschange)
cons<- uschange[,1]
inc<- uschange[,2]
prod<- uschange[,3]
sav<- uschange[,4]
unem<- uschange[,5]
####consider the series of consumption as dependent variable and study with the other explanatory variables in a multiple regression model
fit.cons<- tslm(cons~inc+prod+sav+unem)
summary(fit.cons)
CV(fit.cons)     # about the predictive ability of our model
plot(cons)
lines(fitted(fit.cons), col=2)
res<- residuals(fit.cons)
plot(res)
acf(res)
Acf(res)
##we remove the 'production' variable
fit.cons1<- tslm(cons~inc+sav+unem)
summary(fit.cons1)
CV(fit.cons1)
beer<- ausbeer
beer
plot(beer)
Acf(beer)
#take a portion of data and fit a linear model with tslm
beer1<- window(ausbeer, start=1992, end=2006 -.1)
beer1
plot(beer1)
m1<- tslm(beer1~ trend+ season)
summary(m1)
fit<- fitted(m1)
plot(beer1)
lines(fitted(m1), col=2)
fore <- forecast(m1)
plot(fore)
#analysis of residuals
res<- residuals(m1)
plot(res)
#the form of residuals seems to indicate the presence of negative autocorrelation
Acf(res)
dw<- dwtest(m1, alt="two.sided")
dw
###Music data (RIAA)
music<- read_excel("music.xlsx")
str(music)
##create the variable cassette
cassette<- music$cassette[1:36]
###some simple plots
plot(cassette, type="b")
plot(cumsum(cassette), type="b")
###a better plot of the yearly time series
plot(cassette, type= "b",xlab="Year", ylab="Annual sales",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37), labels=music$year[c(1,10,19,28,37)])
###we estimate a simple Bass Model
bm_cass<-BM(cassette,display = T)
summary(bm_cass)
# ascolta da minuto 1:10
###prediction (out-of-sample)
pred_bmcas<- predict(bm_cass, newx=c(1:50))
pred.instcas<- make.instantaneous(pred_bmcas)
###plot of fitted model
plot(cassette, type= "b",xlab="Year", ylab="Annual sales",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37), labels=music$year[c(1,10,19,28,37)])
lines(pred.instcas, lwd=2, col=2)
bm_cass50<-BM(cassette[1:18],display = T)
summary(bm_cass50)
pred_bmcas50<- predict(bm_cass50, newx=c(1:50))
pred.instcas50<- make.instantaneous(pred_bmcas50)
plot(cassette, type= "b",xlab="Year", ylab="Annual sales",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37), labels=music$year[c(1,10,19,28,37)])
lines(pred.instcas50, lwd=2, col=2)
###we estimate the model with 25% of the data
bm_cass75<-BM(cassette[1:9],display = T)
summary(bm_cass75)
pred_bmcas75<- predict(bm_cass75, newx=c(1:50))
pred.instcas75<- make.instantaneous(pred_bmcas75)
###Comparison between models (instantaneous)
###instantaneous
plot(cassette, type= "b",xlab="Year", ylab="Annual sales",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37), labels=music$year[c(1,10,19,28,37)])
lines(pred.instcas75, lwd=2, col=2)
lines(pred.instcas50, lwd=2, col=3)
lines(pred.instcas, lwd=2, col=4)
###Comparison between models (cumulative)
plot(cumsum(cassette), type= "b",xlab="Year", ylab="Annual sales",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37), labels=music$year[c(1,10,19,28,37)])
lines(pred_bmcas75, lwd=2, col=2)
lines(pred_bmcas50, lwd=2, col=3)
lines(pred_bmcas, lwd=2, col=4)
twitter<- read_excel("twitter.xlsx")
length(twitter$twitter)
pdf("twitter.pdf", width=7, height=6)
plot(twitter$twitter, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37,46), labels=twitter$quarter[c(1,10,19,28,37,46)])
dev.off()
###BM
tw<- (twitter$twitter)
Acf(tw)
bm_tw<-BM(tw,display = T)
summary(bm_tw)
pred_bmtw<- predict(bm_tw, newx=c(1:60))
pred.insttw<- make.instantaneous(pred_bmtw)
plot(tw, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred.insttw, lwd=2, col=2)
###GBMr1
GBMr1tw<- GBM(tw,shock = "rett",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 24,38,-0.1))
GBMe1tw<- GBM(tw,shock = "exp",nshock = 1,prelimestimates = c(4.463368e+04, 1.923560e-03, 9.142022e-02, 12,-0.1,0.1))
summary(GBMe1tw)
pred_GBMe1tw<- predict(GBMe1tw, newx=c(1:60))
pred_GBMe1tw.inst<- make.instantaneous(pred_GBMe1tw)
plot(tw, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred_GBMe1tw.inst, lwd=2, col=2)
#######################################################################################################################
#######################################################################################################################
######GGM
GGM_tw<- GGM(tw, prelimestimates=c(4.463368e+04, 0.001, 0.01, 1.923560e-03, 9.142022e-02))
summary(GGM_tw)
pred_GGM_tw<- predict(GGM_tw, newx=c(1:60))
pred_GGM_tw.inst<- make.instantaneous(pred_GGM_tw)
plot(tw, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred_GGM_tw.inst, lwd=2, col=2)
lines(pred.insttw, lwd=2, col=3)
###Analysis of residuals
res_GGMtw<- residuals(GGM_tw)
acf<- acf(residuals(GGM_tw))
fit_GGMtw<- fitted(GGM_tw)
fit_GGMtw_inst<- make.instantaneous(fit_GGMtw)
########################################################################################################################
########################################################################################################################
####SARMAX refining
library(forecast)
####SARMAX model with external covariate 'fit_GGM'
s2 <- Arima(cumsum(tw), order = c(3,0,1), seasonal=list(order=c(3,0,1), period=4),xreg = fit_GGMtw)
summary(s2)
pres2 <- make.instantaneous(fitted(s2))
plot(twitter$twitter, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37,46), labels=twitter$quarter[c(1,10,19,28,37,46)])
lines(fit_GGMtw_inst, lwd=1, lty=2)
lines(pres2, lty=1,lwd=1)
###Libraries##################################
library(readxl)
library(lmtest)
library(forecast)
library(DIMORA)
library(fpp2)
##some plots for time series##################
plot(a10, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
seasonplot(a10, ylab="million dollars", xlab="Year", main="Seasonal plot: Antidiabetic drugs", year.labels=T, year.labels.left=T, col=1:20, pch=19)
##some plots for time series##################
plot(a10, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
str(a10)
log(a10)
plot(log(a10), ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
log_y <- log(a10)
plot(log_y, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
lin <- lm(log_y ~ trend)
lin <- tslm(log_y ~ trend)
summary(lin)
abline(lin, col=3)
plot(log_y, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
abline(lin, col=3)
fit1
lin
plot(a10, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
abline(lin, col=3)
plot(log_y, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
abline(lin, col=3)
a10
log_y
plot(a10, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
abline(lin, col=3)
lin
lin <- tslm(log_y ~ trend)
summary(lin)
reslin<- residuals(lin)
plot(reslin, xlab="Time", ylab="residuals" )
acf(reslin)
lin_12 <- tslm(log_y ~ trend+season)
summary(lin_12)
reslin <- residuals(lin_12)
reslin_12 <- residuals(lin_12)
plot(reslin_12, xlab="Time", ylab="residuals" )
acf(reslin_12)
Acf(reslin_12)
lines(fitted(fit3), col=2)
###plot of the model
plot(mac.ts, ylab="iMac sales", xlab="Time")
lines(fitted(fit3), col=2)
plot(log_y, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
lin <- tslm(log_y ~ trend)
lines(fitted(lin), col=2)
summary(lin)
reslin <- residuals(lin)
plot(reslin, xlab="Time", ylab="residuals" )
acf(reslin)
Acf(reslin)
lin_12 <- tslm(log_y ~ trend+season)
plot(log_y, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
lines(fitted(lin_12), col=2)
summary(lin_12)
reslin_12 <- residuals(lin_12)
plot(reslin_12, xlab="Time", ylab="residuals" )
Acf(reslin_12)
plot(log_y, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
lines(fitted(lin_12), col=2)
typeof(log_y)
typeof(a10)
str(a10)
str(log_y)
str(cons)
str(trend)
str(inc)
str(tt)
##some plots for time series##################
plot(a10, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
###Libraries##################################
library(readxl)
library(lmtest)
library(forecast)
library(DIMORA)
library(fpp2)
##some plots for time series##################
plot(a10, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
seasonplot(a10, ylab="million dollars", xlab="Year", main="Seasonal plot: Antidiabetic drugs", year.labels=T, year.labels.left=T, col=1:20, pch=19)
log_y <- log(a10)
plot(log_y, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
lin <- tslm(log_y ~ trend)
plot(log_y, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
lines(fitted(lin), col=2)
summary(lin)
reslin <- residuals(lin)
plot(reslin, xlab="Time", ylab="residuals" )
Acf(reslin)
lin_12 <- tslm(log_y ~ trend+season)
plot(log_y, ylab="million dollars", xlab="Year", main="Antidiabetic drugs")
lines(fitted(lin_12), col=2)
summary(lin_12)
reslin_12 <- residuals(lin_12)
plot(reslin_12, xlab="Time", ylab="residuals" )
Acf(reslin_12)
###read the data
facebook<- read_excel("facebook.xlsx")
str(facebook)
##create a variable 'time'
tt<- 1:NROW(facebook)
#create the variable 'fb'
fb <- facebook$fb
str(fb)
##make a plot
plot(tt, fb, xlab="Time", ylab="Facebook users")
acf(fb)
##fit a linear regression model
fit1 <- lm(fb ~ tt)
summary(fit1)
##plot of the model
plot(tt, fb, xlab="Time", ylab="Facebook users")
abline(fit1, col=3)
##check the residuals? are they autocorrelated? Test of DW
dwtest(fit1)
##check the residuals
resfit1<- residuals(fit1)
plot(resfit1,xlab="Time", ylab="residuals" )
##let us do the same with a linear model for time series, so we transform the data into a 'ts' object
fb.ts <- ts(fb, frequency = 4)       # transform fb into a time series object
ts.plot(fb.ts, type="o")             # ts.plot plot for time series
plot(fb.ts, type='o')
plot(fb.ts)
plot(fb.ts, type='O')
plot(fb.ts, type='o')
## we fit a linear model with the tslm function
fitts <- tslm(fb.ts ~ trend)
###obviously it gives the same results of the first model
summary(fitts)
dwtest(fitts)
apple<- read_excel("apple.xlsx")
str(apple)
imac <- apple$iMac
#data visualization
plot(imac,type="l", xlab="quarter", ylab="iMac sales")
#variable tt for a linear model
tt <- 1:NROW(apple)
# linear model
fit2 <- lm(imac ~ tt)
summary(fit2)
plot(imac,type="l", xlab="quarter", ylab="iMac sales")
abline(fit2, col=3)
dwtest(fit2)
###check the residuals
res2<- residuals(fit2)
plot(res2, xlab="quarter", ylab="residuals", type="l")
acf(res2)
#data transformed as time series
mac.ts<-ts(imac, frequency=4)
#Model with trend and seasonality
fit3 <- tslm(mac.ts ~ trend+season)
summary(fit3)
#check the residuals
res3 <- residuals(fit3)
plot(res3, ylab="residuals")
dwtest(fit3)
###plot of the model
plot(mac.ts, ylab="iMac sales", xlab="Time")
lines(fitted(fit3), col=2)
uschange<- uschange
str(uschange)
plot(uschange)
autoplot(uschange)
pairs(uschange)
cons<- uschange[,1]
inc<- uschange[,2]
prod<- uschange[,3]
sav<- uschange[,4]
unem<- uschange[,5]
str(cons)
str(sav)
str(uschange)
plot(uschange)
autoplot(uschange)
pairs(uschange)
####consider the series of consumption as dependent variable and study with the other explanatory variables in a multiple regression model
fit.cons<- tslm(cons~inc+prod+sav+unem)
summary(fit.cons)
CV(fit.cons)     # about the predictive ability of our model
plot(cons)
lines(fitted(fit.cons), col=2)
res<- residuals(fit.cons)
plot(res)
acf(res)
Acf(res)
##we remove the 'production' variable
fit.cons1<- tslm(cons~inc+sav+unem)
summary(fit.cons1)
CV(fit.cons1)
###Music data (RIAA)
music<- read_excel("music.xlsx")
str(music)
##create the variable cassette
cassette<- music$cassette[1:36]
###some simple plots
plot(cassette, type="b")
plot(cumsum(cassette), type="b")
###a better plot of the yearly time series
plot(cassette, type= "b",xlab="Year", ylab="Annual sales",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37), labels=music$year[c(1,10,19,28,37)])
###a better plot of the yearly time series
plot(cassette, type= "b",xlab="Year", ylab="Annual sales",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37), labels=music$year[c(1,10,19,28,37)])
###we estimate a simple Bass Model
bm_cass<-BM(cassette,display = T)
str(cassette)
summary(bm_cass)
# ascolta da minuto 1:10
###prediction (out-of-sample)
pred_bmcas<- predict(bm_cass, newx=c(1:50))
pred.instcas<- make.instantaneous(pred_bmcas)
pred_bmcas
cassette
cumsum(cassette)
bm_cass2<-BM(cumsum(cassette),display = T)
###we estimate a simple Bass Model
bm_cass<-BM(cassette,display = T)
pred.instcas
###plot of fitted model
plot(cassette, type= "b",xlab="Year", ylab="Annual sales",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37), labels=music$year[c(1,10,19,28,37)])
lines(pred.instcas, lwd=2, col=2)
bm_cass50<-BM(cassette[1:18],display = T)
summary(bm_cass50)
pred_bmcas50<- predict(bm_cass50, newx=c(1:50))
pred.instcas50<- make.instantaneous(pred_bmcas50)
plot(cassette, type= "b",xlab="Year", ylab="Annual sales",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37), labels=music$year[c(1,10,19,28,37)])
lines(pred.instcas50, lwd=2, col=2)
###we estimate the model with 25% of the data
bm_cass75<-BM(cassette[1:9],display = T)
summary(bm_cass75)
pred_bmcas75<- predict(bm_cass75, newx=c(1:50))
pred.instcas75<- make.instantaneous(pred_bmcas75)
###Comparison between models (instantaneous)
###instantaneous
plot(cassette, type= "b",xlab="Year", ylab="Annual sales",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37), labels=music$year[c(1,10,19,28,37)])
lines(pred.instcas75, lwd=2, col=2)
lines(pred.instcas50, lwd=2, col=3)
lines(pred.instcas, lwd=2, col=4)
###Comparison between models (cumulative)
plot(cumsum(cassette), type= "b",xlab="Year", ylab="Annual sales",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37), labels=music$year[c(1,10,19,28,37)])
lines(pred_bmcas75, lwd=2, col=2)
lines(pred_bmcas50, lwd=2, col=3)
lines(pred_bmcas, lwd=2, col=4)
twitter<- read_excel("twitter.xlsx")
length(twitter$twitter)
pdf("twitter.pdf", width=7, height=6)
plot(twitter$twitter, type= "b",xlab="Quarter", ylab="Quarterly revenues",  pch=16, lty=3, xaxt="n", cex=0.6)
axis(1, at=c(1,10,19,28,37,46), labels=twitter$quarter[c(1,10,19,28,37,46)])
dev.off()
###BM
tw<- (twitter$twitter)
Acf(tw)
